[{"path":"https://kuan-liu-lab.github.io/bayesmsm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xiao Yan. Maintainer.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu K, Yan X (2024). bayesmsm: Bayesian Marginal Structural Models. R package version 0.1.0.","code":"@Manual{,   title = {bayesmsm: Bayesian Marginal Structural Models},   author = {Kuan Liu and Xiao Yan},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"r-package-bayesmsm","dir":"","previous_headings":"","what":"Bayesian Marginal Structural Models","title":"Bayesian Marginal Structural Models","text":"bayesmsm package R package implementing Bayesian marginal structural models.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Bayesian Marginal Structural Models","text":"Reference paper Bayesian marginal structural models: Saarela, O., Stephens, D. ., Moodie, E. E., & Klein, M. B. (2015). Bayesian estimation marginal structural models. Biometrics, 71(2), 279-288. Liu, K., Saarela, O., Feldman, B. M., & Pullenayegum, E. (2020). Estimation causal effects repeatedly measured outcomes Bayesian framework. Statistical methods medical research, 29(9), 2507-2519.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Marginal Structural Models","text":"install using devtools package","code":"## install.packages(devtools) ## make sure to have devtools installed  devtools::install_github(\"Kuan-Liu-Lab/bayesmsm\") library(bayesmsm)"},{"path":[]},{"path":[]},{"path":"https://kuan-liu-lab.github.io/bayesmsm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 bayesmsm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"function performs Bayesian non-parametric bootstrap estimate causal effects Bayesian marginal structural models.supports continuous (gaussian) binary (binomial) outcome variables.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"","code":"bayesmsm(   ymodel,   nvisit,   reference = c(rep(0, nvisit)),   comparator = c(rep(1, nvisit)),   family = \"gaussian\",   data,   wmean = rep(1, nrow(data)),   nboot = 1000,   optim_method = \"BFGS\",   seed = 890123,   parallel = TRUE,   ncore = 6 )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"ymodel formula representing outcome model interactions. nvisit Number visits time points. reference Reference intervention across visits. Default vector 0's length nvisit (.e. never treated). comparator Comparison intervention across visits. Default vector 1's length nvisit (.e. always treated). family Outcome distribution family; \"gaussian\" (default) continuous outcomes \"binomial\" binary outcomes. data dataset. wmean Vector treatment assignment weights. Default rep(1, 1000). nboot Number bootstrap iterations. optim_method Optimization method used. Default 'BFGS'. seed seed ensure reproducibility. parallel Whether parallel computation used. Default TRUE. ncore Number cores use parallel computation. Default 4.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"returns object class `bayesmsm` contains information data, model, etc. object class `bayesmsm` list containing least following components: * `mean`, mean bootstrap estimates * `sd`, standard deviation bootstrap estimates * `quantile`, 95 * `bootdata`, data frame bootstrapped estimates * `reference`, reference intervention level * `comparator`, camparison intervention level","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"","code":"# Continuous outcome testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 1000,                            optim_method = \"BFGS\",                            seed = 890123,                            parallel = TRUE,                            ncore = 2) #> Loading required package: foreach #> Loading required package: doParallel #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: MCMCpack #> Loading required package: coda #> Loading required package: MASS #> ## #> ## Markov Chain Monte Carlo Package (MCMCpack) #> ## Copyright (C) 2003-2024 Andrew D. Martin, Kevin M. Quinn, and Jong Hee Park #> ## #> ## Support provided by the U.S. National Science Foundation #> ## (Grants SES-0350646 and SES-0350613) #> ##"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Treatment Effect Weight Estimation — bayesweight","title":"Bayesian Treatment Effect Weight Estimation — bayesweight","text":"Bayesian Treatment Effect Weight Estimation","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Treatment Effect Weight Estimation — bayesweight","text":"","code":"bayesweight(   trtmodel.list = list(a_1 ~ w1 + w2 + L1_1 + L2_1, a_2 ~ w1 + w2 + L1_1 + L2_1 + L1_2 +     L2_2 + a_1),   data = causaldata,   n.chains = 1,   n.iter = 25000,   n.burnin = 15000,   n.thin = 5,   seed = 890123,   parallel = FALSE )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Treatment Effect Weight Estimation — bayesweight","text":"trtmodel.list list formulas corresponding time point time-specific treatment variable left hand side pre-treatment covariates balanced right hand side. formulas must temporal order, must contain covariates balanced time point (.e., treatments covariates featured early formulas appear later ones). Interactions functions covariates allowed. parallel","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Treatment Effect Weight Estimation — bayesweight","text":"","code":"# Continuous outcome testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) weights <- bayesweight(trtmodel.list = list(a_1 ~ w1 + w2 + L1_1 + L2_1,                                             a_2 ~ w1 + w2 + L1_1 + L2_1 + L1_2 + L2_2 + a_1),                        data = testdata,                        n.iter = 25000,                        n.burnin = 15000,                        n.thin = 5,                        n.chains = 1,                        seed = 890123,                        parallel = FALSE) #> Loading required package: R2jags #> Loading required package: rjags #> Linked to JAGS 4.3.1 #> Loaded modules: basemod,bugs #>  #> Attaching package: 'R2jags' #> The following object is masked from 'package:coda': #>  #>     traceplot #> module glm loaded #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4000 #>    Unobserved stochastic nodes: 16 #>    Total graph size: 21040 #>  #> Initializing model #>"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"function calculate effect intervention given parameter estimates intervention levels","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"","code":"calculate_effect(intervention_levels, variables, param_estimates)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"intervention_levels numeric vector indicating levels intervention predictor variable. variables list names response variable predictor variables extracted model. param_estimates vector parameter estimates model.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"numeric value representing calculated effect specified intervention.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> [1] \"Hello, world!\""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Average Potential Outcomes (APO) — plot_APO","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"function plots density APO specified effect type bootstrap simulation results.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"","code":"plot_APO(input, effect_type, ...)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"input data frame model object containing 'bootdata', include 'effect_comparator' 'effect_reference' columns. effect_type character string specifying effect plot: 'effect_comparator' 'effect_reference'. ... Additional arguments passed plotting function.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"density plot showing distribution specified average potential outcome (reference comparison).","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"","code":"testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 1000,                            optim_method = \"BFGS\",                            estimand = \"RD\",                            parallel = FALSE,                            ncore = 2) #> Error in bayesmsm(ymodel = y ~ a_1 + a_2, nvisit = 2, reference = c(rep(0,     2)), comparator = c(rep(1, 2)), family = \"gaussian\", data = testdata,     wmean = rep(1, 1000), nboot = 1000, optim_method = \"BFGS\",     estimand = \"RD\", parallel = FALSE, ncore = 2): unused argument (estimand = \"RD\") plot_APO(model$bootdata, effect_type = \"effect_comparator\") #> Error in eval(expr, envir, enclos): object 'model' not found plot_APO(model, effect_type = \"effect_reference\") #> Error in eval(expr, envir, enclos): object 'model' not found"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Average Treatment Effect (ATE) Density from Bootstrap Results — plot_ATE","title":"Plot Average Treatment Effect (ATE) Density from Bootstrap Results — plot_ATE","text":"Plot Average Treatment Effect (ATE) Density Bootstrap Results","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Average Treatment Effect (ATE) Density from Bootstrap Results — plot_ATE","text":"","code":"plot_ATE(   input,   col_density = \"blue\",   fill_density = \"lightblue\",   main = \"Posterior Predictive Distribution of Average Treatment Effect (ATE）\",   xlab = \"ATE\",   ylab = \"Posterior Predictive Distribution\",   xlim = NULL,   ylim = NULL,   ... )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Average Treatment Effect (ATE) Density from Bootstrap Results — plot_ATE","text":"input model object, data frame vector containing bootstrap estimates ATE. col_density Color density plot (default \"blue\"). fill_density Fill color density plot (default \"lightblue\"). main Title plot (default \"Density ATE Estimates\"). xlab X-axis label (default \"ATE\"). ylab Y-axis label (default \"Density\"). xlim Limits x-axis (default NULL). ylim Limits y-axis (default NULL). ... Additional graphical parameters passed plot function.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Average Treatment Effect (ATE) Density from Bootstrap Results — plot_ATE","text":"","code":"testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 1000,                            optim_method = \"BFGS\",                            estimand = \"RD\",                            parallel = FALSE,                            ncore = 2) #> Error in bayesmsm(ymodel = y ~ a_1 + a_2, nvisit = 2, reference = c(rep(0,     2)), comparator = c(rep(1, 2)), family = \"gaussian\", data = testdata,     wmean = rep(1, 1000), nboot = 1000, optim_method = \"BFGS\",     estimand = \"RD\", parallel = FALSE, ncore = 2): unused argument (estimand = \"RD\") plot_ATE(model) #> Error in eval(expr, envir, enclos): object 'model' not found plot_ATE(model$bootdata) #> Error in eval(expr, envir, enclos): object 'model' not found plot_ATE(model$bootdata$ATE) #> Error in eval(expr, envir, enclos): object 'model' not found"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Error bar plots for treatment effects — plot_est_box","title":"Error bar plots for treatment effects — plot_est_box","text":"Error bar plots treatment effects","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error bar plots for treatment effects — plot_est_box","text":"","code":"plot_est_box(input, ...)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error bar plots for treatment effects — plot_est_box","text":"input data frame model object containing 'bootdata', include 'effect_comparator', 'effect_reference', 'ATE' columns. ... Additional arguments passed plotting function.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error bar plots for treatment effects — plot_est_box","text":"error bar plot mean effects 95% confidence intervals comparator level, reference level, ATE.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error bar plots for treatment effects — plot_est_box","text":"","code":"testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 1000,                            optim_method = \"BFGS\",                            estimand = \"RD\",                            parallel = FALSE,                            ncore = 2) #> Error in bayesmsm(ymodel = y ~ a_1 + a_2, nvisit = 2, reference = c(rep(0,     2)), comparator = c(rep(1, 2)), family = \"gaussian\", data = testdata,     wmean = rep(1, 1000), nboot = 1000, optim_method = \"BFGS\",     estimand = \"RD\", parallel = FALSE, ncore = 2): unused argument (estimand = \"RD\") plot_est_box(model$bootdata) # without reference & comparator information below labels #> Error in eval(expr, envir, enclos): object 'model' not found plot_est_box(model) # with reference & comparator information below labels #> Error in eval(expr, envir, enclos): object 'model' not found"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary.bayesmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — summary.bayesmsm","title":"Title — summary.bayesmsm","text":"Title","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary.bayesmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — summary.bayesmsm","text":"","code":"# S3 method for bayesmsm summary(model)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary.bayesmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — summary.bayesmsm","text":"model model object bayesmsm","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary.bayesmsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — summary.bayesmsm","text":"","code":"# Continuous outcome testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 1000,                            optim_method = \"BFGS\",                            seed = 890123,                            parallel = TRUE,                            ncore = 2) summary.bayesmsm(model) #> Error in summary.bayesmsm(model): could not find function \"summary.bayesmsm\""}]
