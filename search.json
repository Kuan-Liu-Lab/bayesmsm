[{"path":"https://kuan-liu-lab.github.io/bayesmsm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 bayesmsm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kuan Liu. Author, maintainer.           https://Kuan-Liu.com/ Xiao Yan. Author.           https://www.linkedin.com//xiaoyan1596/ Martin Urner. Author.           https://criticalcaretoronto.com/-fellows/dr-martin-urner/","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu K, Yan X, Urner M (2024). bayesmsm: Fitting Bayesian Marginal Structural Models Longitudinal observational Data. R package version 0.1.0, https://kuan-liu-lab.github.io/bayesmsm/.","code":"@Manual{,   title = {bayesmsm: Fitting Bayesian Marginal Structural Models for Longitudinal observational Data},   author = {Kuan Liu and Xiao Yan and Martin Urner},   year = {2024},   note = {R package version 0.1.0},   url = {https://kuan-liu-lab.github.io/bayesmsm/}, }"},{"path":[]},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"overview","dir":"","previous_headings":"","what":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"bayesmsm R package implements Bayesian marginal structrual models estimate average treatment effect drawing causal inference time-varying treatment assignment confoudning extension handle informative right-censoring. Bayesian marginal structural models semi-parametric approach features two-step estimation process. first step involves Bayesian parametric estimation time-varying treatment assignment models second step involves non-parametric Bayesian bootstrap estimate average treatment effect two distinct treatment sequences interest. Reference paper Bayesian marginal structural models: Saarela, O., Stephens, D. ., Moodie, E. E., & Klein, M. B. (2015). Bayesian estimation marginal structural models. Biometrics, 71(2), 279-288. Liu, K., Saarela, O., Feldman, B. M., & Pullenayegum, E. (2020). Estimation causal effects repeatedly measured outcomes Bayesian framework. Statistical methods medical research, 29(9), 2507-2519.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"Install using devtools package:","code":"## install.packages(devtools) ## make sure to have devtools installed  devtools::install_github(\"Kuan-Liu-Lab/bayesmsm\") library(bayesmsm)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"dependency","dir":"","previous_headings":"","what":"Dependency","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"package depends following R packages: MCMCpack doParallel foreach parallel R2jags coda","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"examples demonstrating use bayesmsm package:","code":"# Load example data testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\"))  # Calculate Bayesian weights weights <- bayesweight(   trtmodel.list = list(     a_1 ~ w1 + w2 + L1_1 + L2_1,     a_2 ~ w1 + w2 + L1_1 + L2_1 + L1_2 + L2_2 + a_1   ),   data = testdata,   n.iter = 250,   n.burnin = 150,   n.thin = 5,   n.chains = 2,   seed = 890123,   parallel = TRUE )  # Perform Bayesian non-parametric bootstrap model <- bayesmsm(   ymodel = y ~ a_1 + a_2,   nvisit = 2,   reference = c(rep(0, 2)),   comparator = c(rep(1, 2)),   family = \"gaussian\",   data = testdata,   wmean = weights,   nboot = 1000,   optim_method = \"BFGS\",   seed = 890123,   parallel = TRUE,   ncore = 2 )  # View model summary summary.bayesmsm(model)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"package licensed MIT License. See LICENSE file details.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"Please cite software using:","code":"@Manual{,   title = {bayesmsm: An R package for longitudinal causal analysis using Bayesian Marginal Structural Models},   author = {Xiao Yan and Martin Urner and Olli Saarela and Kuan Liu},   year = {2024},   note = { https://github.com/Kuan-Liu-Lab/bayesmsm},   url = {https://kuan-liu-lab.github.io/bayesmsm/}, }"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Fitting Bayesian Marginal Structural Models for Longitudinal observational Data","text":"e-mail: kuan.liu@utoronto.ca, Clarence.YXA@gmail.com Please report bugs opening issue.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"function performs Bayesian non-parametric bootstrap estimate causal effects Bayesian marginal structural models. supports continuous (gaussian) binary (binomial) outcome variables.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"","code":"bayesmsm(   ymodel,   nvisit,   reference = c(rep(0, nvisit)),   comparator = c(rep(1, nvisit)),   family = \"gaussian\",   data,   wmean = rep(1, nrow(data)),   nboot = 1000,   optim_method = \"BFGS\",   seed = 890123,   parallel = TRUE,   ncore = 6 )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"ymodel formula representing outcome model interactions. nvisit Number visits time points. reference Reference intervention across visits. Default vector 0's length nvisit (.e. never treated). comparator Comparison intervention across visits. Default vector 1's length nvisit (.e. always treated). family Outcome distribution family; \"gaussian\" (default) continuous outcomes \"binomial\" binary outcomes. data dataset. wmean Vector treatment assignment weights. Default rep(1, 1000). nboot Number bootstrap iterations. optim_method Optimization method used. Default 'BFGS'. seed seed ensure reproducibility. parallel Whether parallel computation used. Default TRUE. ncore Number cores use parallel computation. Default 4.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"returns object class `bayesmsm` contains information data, model, etc. object class `bayesmsm` list containing least following components: * `mean`, mean bootstrap estimates * `sd`, standard deviation bootstrap estimates * `quantile`, 95 * `bootdata`, data frame bootstrapped estimates * `reference`, reference intervention level * `comparator`, camparison intervention level","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesmsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Marginal Structural Model Bootstrap Estimation — bayesmsm","text":"","code":"# Continuous outcome testdata <- read.csv(system.file(\"extdata\",                                  \"continuous_outcome_data.csv\",                                  package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 100,                            optim_method = \"BFGS\",                            seed = 890123,                            parallel = TRUE,                            ncore = 2)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Treatment Effect Weight Estimation Using JAGS — bayesweight","title":"Bayesian Treatment Effect Weight Estimation Using JAGS — bayesweight","text":"function estimates Bayesian weights time-varying treatment effects using specified models treatment time point. uses JAGS Bayesian inference supports parallel computation speed MCMC simulations.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Treatment Effect Weight Estimation Using JAGS — bayesweight","text":"","code":"bayesweight(   trtmodel.list,   data,   n.chains = 2,   n.iter = 25000,   n.burnin = 15000,   n.thin = 5,   seed = 890123,   parallel = TRUE )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Treatment Effect Weight Estimation Using JAGS — bayesweight","text":"trtmodel.list list formulas corresponding time point time-specific treatment variable left hand side pre-treatment covariates balanced right hand side. Interactions functions covariates allowed. data dataframe containing variables mentioned `trtmodel.list`. n.chains number MCMC chains run. Set 1 non-parallel computation. parallel computation, required use least 2 chains. n.iter total number iterations chain (including burn-). n.burnin number burn-iterations chain. n.thin Thinning rate MCMC sampler. seed seed ensure reproducibility. parallel Logical. Indicates whether run MCMC chains parallel. Default TRUE.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Treatment Effect Weight Estimation Using JAGS — bayesweight","text":"list calculated weights.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Treatment Effect Weight Estimation Using JAGS — bayesweight","text":"","code":"# Continuous outcome testdata <- read.csv(system.file(\"extdata\",                                  \"continuous_outcome_data.csv\",                                  package = \"bayesmsm\")) weights <- bayesweight(trtmodel.list = list(a_1 ~ w1 + w2 + L1_1 + L2_1,                                             a_2 ~ w1 + w2 + L1_1 + L2_1 +                                                   L1_2 + L2_2 + a_1),                        data = testdata,                        n.iter = 2500,                        n.burnin = 1500,                        n.thin = 5,                        n.chains = 2,                        seed = 890123,                        parallel = TRUE)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight_cen.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Weight Estimation for Censored Data — bayesweight_cen","title":"Bayesian Weight Estimation for Censored Data — bayesweight_cen","text":"function computes posterior mean weights using Bayesian estimation treatment models censoring models across multiple time points. models can run parallel estimate weights needed causal inference censored data.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight_cen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Weight Estimation for Censored Data — bayesweight_cen","text":"","code":"bayesweight_cen(   trtmodel.list = list(A1 ~ L11 + L21, A2 ~ L11 + L21 + L12 + L22 + A1, A3 ~ L11 + L21 +     L12 + L22 + A1 + L13 + L23 + A2),   cenmodel.list = list(C1 ~ L11 + L21, C2 ~ L11 + L21 + A1, C3 ~ L11 + L21 + A1 + L12 +     L22 + A2),   data,   n.iter = 2500,   n.burnin = 1500,   n.thin = 5,   parallel = FALSE,   n.chains = 1,   seed = 890123 )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight_cen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Weight Estimation for Censored Data — bayesweight_cen","text":"trtmodel.list list formulas corresponding time point time-specific treatment variable left-hand side pre-treatment covariates balanced right-hand side. Interactions functions covariates allowed. cenmodel.list list formulas censoring data time point, censoring indicators left-hand side covariates right-hand side. data data frame containing variables models (treatment, censoring, covariates). n.iter Number iterations run MCMC algorithm JAGS. n.burnin Number iterations discard burn-MCMC algorithm. n.thin Thinning rate MCMC samples. parallel Logical, indicating whether run MCMC sampling parallel (default `FALSE`). n.chains Number MCMC chains run. parallel `TRUE`, specifies number chains run parallel. seed seed random number generation ensure reproducibility MCMC.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight_cen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Weight Estimation for Censored Data — bayesweight_cen","text":"vector posterior mean weights, computed taking average weights across MCMC iterations.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/bayesweight_cen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Weight Estimation for Censored Data — bayesweight_cen","text":"","code":"simdat_cen <- read.csv(system.file(\"extdata\",                                    \"sim_causal.csv\",                                    package = \"bayesmsm\")) weights_cen <- bayesweight_cen(trtmodel.list = list(A1 ~ L11 + L21,                                                     A2 ~ L11 + L21 + L12 +                                                          L22 + A1,                                                     A3 ~ L11 + L21 + L12 +                                                          L22 + A1 + L13 +                                                          L23 + A2),                                cenmodel.list = list(C1 ~ L11 + L21,                                                     C2 ~ L11 + L21 + A1,                                                     C3 ~ L11 + L21 + A1 +                                                          L12 + L22 + A2),                                data = simdat_cen,                                n.iter = 2500,                                n.burnin = 1500,                                n.thin = 5,                                parallel = FALSE,                                n.chains = 1,                                seed = 890123) #> module glm loaded #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4836 #>    Unobserved stochastic nodes: 44 #>    Total graph size: 16501 #>  #> Initializing model #>  #> Warning: Some parameters have not converged with Geweke index > 1.96. More iterations may be needed."},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"function calculate effect intervention given parameter estimates intervention levels","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"","code":"calculate_effect(intervention_levels, variables, param_estimates)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"intervention_levels numeric vector indicating levels intervention predictor variable. variables list names response variable predictor variables extracted model. param_estimates vector parameter estimates model.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/calculate_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to calculate the effect of an intervention given the parameter estimates and intervention levels — calculate_effect","text":"numeric value representing calculated effect specified intervention.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Average Potential Outcomes (APO) — plot_APO","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"function plots density APO specified effect type bootstrap simulation results.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"","code":"plot_APO(input, effect_type, ...)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"input data frame model object containing 'bootdata', include 'effect_comparator' 'effect_reference' columns. effect_type character string specifying effect plot: 'effect_comparator' 'effect_reference'. ... Additional arguments passed plotting function.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"density plot showing distribution specified average potential outcome (reference comparison).","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_APO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Average Potential Outcomes (APO) — plot_APO","text":"","code":"testdata <- read.csv(system.file(\"extdata\",                                  \"continuous_outcome_data.csv\",                                  package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 100,                            optim_method = \"BFGS\",                            parallel = FALSE,                            ncore = 2) plot_APO(model$bootdata, effect_type = \"effect_comparator\")  plot_APO(model, effect_type = \"effect_reference\")"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Average Treatment Effect Density from Bootstrap Results — plot_ATE","title":"Plot Average Treatment Effect Density from Bootstrap Results — plot_ATE","text":"Plot Average Treatment Effect Density Bootstrap Results","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Average Treatment Effect Density from Bootstrap Results — plot_ATE","text":"","code":"plot_ATE(   input,   ATE = \"RD\",   col_density = \"blue\",   fill_density = \"lightblue\",   main = \"Posterior Predictive Distribution of Average Treatment Effect\",   xlab = \"ATE\",   ylab = \"Posterior Predictive Distribution\",   xlim = NULL,   ylim = NULL,   ... )"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Average Treatment Effect Density from Bootstrap Results — plot_ATE","text":"input model object, data frame vector containing bootstrap estimates ATE. ATE define causal estimand interest RD, , RR. col_density Color density plot (default \"blue\"). fill_density Fill color density plot (default \"lightblue\"). main Title plot (default \"Density ATE Estimates\"). xlab X-axis label (default \"ATE\"). ylab Y-axis label (default \"Density\"). xlim Limits x-axis (default NULL). ylim Limits y-axis (default NULL). ... Additional graphical parameters passed plot function.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_ATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Average Treatment Effect Density from Bootstrap Results — plot_ATE","text":"","code":"testdata <- read.csv(system.file(\"extdata\",                                  \"continuous_outcome_data.csv\",                                  package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 100,                            optim_method = \"BFGS\",                            parallel = TRUE,                            ncore = 2) plot_ATE(model)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Error bar plots for treatment effects — plot_est_box","title":"Error bar plots for treatment effects — plot_est_box","text":"Error bar plots treatment effects","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error bar plots for treatment effects — plot_est_box","text":"","code":"plot_est_box(input, ...)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error bar plots for treatment effects — plot_est_box","text":"input data frame model object containing 'bootdata', include 'effect_comparator', 'effect_reference', 'RD' columns. ... Additional arguments passed plotting function.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error bar plots for treatment effects — plot_est_box","text":"error bar plot mean effects 95% confidence intervals comparator level, reference level, ATE.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/plot_est_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error bar plots for treatment effects — plot_est_box","text":"","code":"testdata <- read.csv(system.file(\"extdata\",                                  \"continuous_outcome_data.csv\",                                  package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 100,                            optim_method = \"BFGS\",                            parallel = FALSE,                            ncore = 2) plot_est_box(model$bootdata) # without reference & comparator information                               # below labels plot_est_box(model) # with reference & comparator information below labels"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary_bayesmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function to generate result table from bayesmsm — summary_bayesmsm","title":"Summary function to generate result table from bayesmsm — summary_bayesmsm","text":"Summary function generate result table bayesmsm","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary_bayesmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function to generate result table from bayesmsm — summary_bayesmsm","text":"","code":"summary_bayesmsm(model)"},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary_bayesmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function to generate result table from bayesmsm — summary_bayesmsm","text":"model model object bayesmsm","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary_bayesmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function to generate result table from bayesmsm — summary_bayesmsm","text":"summary table results bayesmsm.","code":""},{"path":"https://kuan-liu-lab.github.io/bayesmsm/reference/summary_bayesmsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function to generate result table from bayesmsm — summary_bayesmsm","text":"","code":"# Continuous outcome testdata <- read.csv(system.file(\"extdata\", \"continuous_outcome_data.csv\", package = \"bayesmsm\")) model <- bayesmsm(ymodel = y ~ a_1+a_2,                            nvisit = 2,                            reference = c(rep(0,2)),                            comparator = c(rep(1,2)),                            family = \"gaussian\",                            data = testdata,                            wmean = rep(1, 1000),                            nboot = 100,                            optim_method = \"BFGS\",                            seed = 890123,                            parallel = TRUE,                            ncore = 2) summary_bayesmsm(model) #>                  mean         sd       2.5%     97.5% #> Reference   2.3085940 0.04479799  2.2341584  2.406479 #> Comparator -0.8348404 0.07909260 -0.9703483 -0.698226 #> RD         -3.1434345 0.09738841 -3.3193351 -2.961105"}]
