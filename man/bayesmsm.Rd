% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesmsm.R
\name{bayesmsm}
\alias{bayesmsm}
\title{Bayesian Marginal Structural Model Bootstrap Estimation}
\usage{
bayesmsm(
  ymodel,
  nvisit,
  reference = c(rep(0, nvisit)),
  comparator = c(rep(1, nvisit)),
  family = "gaussian",
  data,
  wmean = rep(1, nrow(data)),
  nboot = 1000,
  optim_method = "BFGS",
  seed = 890123,
  parallel = TRUE,
  ncore = 6
)
}
\arguments{
\item{ymodel}{A formula representing the outcome model with interactions.}

\item{nvisit}{Number of visits or time points.}

\item{reference}{Reference intervention across all visits. Default is a vector of all 0's with length nvisit (i.e. never treated).}

\item{comparator}{Comparison intervention across all visits. Default is a vector of all 1's with length nvisit (i.e. always treated).}

\item{family}{Outcome distribution family; "gaussian" (default) for continuous outcomes or "binomial" for binary outcomes.}

\item{data}{The dataset.}

\item{wmean}{Vector of treatment assignment weights. Default is rep(1, 1000).}

\item{nboot}{Number of bootstrap iterations.}

\item{optim_method}{Optimization method to be used. Default is 'BFGS'.}

\item{seed}{A seed to ensure reproducibility.}

\item{parallel}{Whether parallel computation should be used. Default is TRUE.}

\item{ncore}{Number of cores to use for parallel computation. Default is 4.}
}
\value{
It returns an object of class `bayesmsm` that contains the information about the data, model, etc.

An object of class `bayesmsm` is a list containing at least the following components:
* `mean`, the mean of the bootstrap estimates
* `sd`, the standard deviation of the bootstrap estimates
* `quantile`, the 95% quantiles of the bootstrap estimates
* `bootdata`, a data frame of bootstrapped estimates
* `reference`, the reference intervention level
* `comparator`, the camparison intervention level
}
\description{
This function performs Bayesian non-parametric bootstrap to estimate causal
effects in Bayesian marginal structural models. It supports both continuous
(gaussian) and binary (binomial) outcome variables.
}
\examples{

# Continuous outcome
testdata <- read.csv(system.file("extdata", "continuous_outcome_data.csv", package = "bayesmsm"))
model <- bayesmsm(ymodel = y ~ a_1+a_2,
                           nvisit = 2,
                           reference = c(rep(0,2)),
                           comparator = c(rep(1,2)),
                           family = "gaussian",
                           data = testdata,
                           wmean = rep(1, 1000),
                           nboot = 1000,
                           optim_method = "BFGS",
                           seed = 890123,
                           parallel = TRUE,
                           ncore = 2)

# Binary outcome
testdata <- read.csv(system.file("extdata", "binary_outcome_data.csv", package = "bayesmsm"))
model <- bayesmsm(ymodel = y ~ a_1+a_2,
                           nvisit = 2,
                           reference = c(rep(0,2)),
                           comparator = c(rep(1,2)),
                           family = "binomial",
                           data = testdata,
                           wmean = rep(1, 1000),
                           nboot = 1000,
                           optim_method = "BFGS",
                           seed = 890123,
                           parallel = TRUE,
                           ncore = 2)


}
